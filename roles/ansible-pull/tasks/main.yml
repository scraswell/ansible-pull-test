---
- name: Find installation disk
  ansible.builtin.shell:
    cmd: |
      lsblk -b --json | \
        jq '[ .blockdevices[] | select (.type == "disk" and .ro == false and .size > (30 * 1024 * 1024 * 1024)) ]'
  register: installation_disk_result
  changed_when: false

- name: Set installation disk
  ansible.builtin.set_fact:
    installation_disk: "{{ installation_disk_result.stdout|from_json }}"

- name: Fail when unable to determine installation disk
  ansible.builtin.fail:
    msg: "Could not determine installation disk."
  when: installation_disk | length != 1

- name: Set installation disk
  ansible.builtin.set_fact:
    installation_disk: "{{ installation_disk[0] }}"

- name: Combine Ansible device info
  ansible.builtin.set_fact:
    installation_disk: "{{ installation_disk | ansible.builtin.combine(hostvars[inventory_hostname].ansible_devices[installation_disk.name]) }}"

- name: Show installation disk
  ansible.builtin.debug:
    msg: "Installation disk: {{ installation_disk }}."

- name: Set installation device path
  ansible.builtin.set_fact:
    installation_device: "/dev/{{ installation_disk.name }}"

- name: Show installation device
  ansible.builtin.debug:
    msg: "Installation will continue on {{ installation_device }}."

- name: Clean the device
  ansible.builtin.shell:
    cmd: |
      sgdisk -Z {{ installation_device }}
  changed_when: false

