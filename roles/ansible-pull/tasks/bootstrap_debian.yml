---
- name: Install debootstrap
  ansible.builtin.shell:
    cmd: |
      pacman -S --noconfirm debootstrap

- name: Perform bootstrap
  ansible.builtin.shell:
    cmd: |
      debootstrap \
        --arch=amd64 \
        --variant=minbase \
        {{ debian_code_name }} \
        {{ bootstrap_dir }}

- name: Configure sources.list
  ansible.builtin.copy:
    content: |
      deb https://mirror.csclub.uwaterloo.ca/debian {{ debian_code_name }} main contrib non-free non-free-firmware
    dest: "{{ bootstrap_dir }}/etc/apt/sources.list"
    mode: 0644
    owner: root
    group: root

- name: Initial update
  ansible.builtin.shell:
    cmd: |
      arch-chroot {{ bootstrap_dir }} apt -y {{ command }}
  loop:
    - update
    - upgrade
  loop_control:
    loop_var: command

- name: Install base packages
  ansible.builtin.shell:
    cmd: |
      arch-chroot {{ bootstrap_dir }} apt -y --no-install-recommends install {{ debian_base_packages | join(' ') }}

- name: Configure clock
  ansible.builtin.shell:
    cmd: |
      arch-chroot {{ bootstrap_dir }} {{ command }}
  loop:
    - ln -sf /usr/share/zoneinfo/Canada/Atlantic /etc/localtime
    - hwclock --systohc
  loop_control:
    loop_var: command

- name: Copy locale.gen
  ansible.builtin.copy:
    content: |
      en_US.UTF-8 UTF-8
    dest: "{{ bootstrap_dir }}/etc/locale.gen"
    mode: 0644
    owner: root
    group: root

- name: Generate locale
  ansible.builtin.shell:
    cmd: |
      arch-chroot {{ bootstrap_dir }} locale-gen

- name: Copy locale.conf
  ansible.builtin.copy:
    content: |
      LANG=en_US.UTF-8
    dest: "{{ bootstrap_dir }}/etc/locale.conf"
    mode: 0644
    owner: root
    group: root

- name: Update locale
  ansible.builtin.shell:
    cmd: |
      arch-chroot {{ bootstrap_dir }} update-locale LANG=en_US.UTF-8 LANGUAGE

- name: Copy issue
  ansible.builtin.copy:
    content: |
      Debian GNU/Linux (\v) \n (\4) \l
    dest: "{{ bootstrap_dir }}/etc/issue"
    mode: 0644
    owner: root
    group: root

- name: Create .vimrc
  ansible.builtin.copy:
    content: |
      :set encoding=utf-8
      :set tabstop=4
      :set shiftwidth=4
      :set softtabstop=4
      :set expandtab
      :set nowrap
      :set number
      :set ruler
      :set nobackup
      :set noundofile
      :set smartindent
      :filetype indent on
      :syntax on
    dest: "{{ vimrc_dest }}"
    mode: 0644
    owner: root
    group: root
  loop:
    - "{{ bootstrap_dir }}/root/.vimrc"
    - "{{ bootstrap_dir }}/etc/skel/.vimrc"
  loop_control:
    loop_var: vimrc_dest

- name: Set hostname
  ansible.builtin.copy:
    content: |
      {{ hostname | default('debian') }}
    dest: "{{ bootstrap_dir }}/etc/hostname"
    mode: 0644
    owner: root
    group: root

- name: Set hosts
  ansible.builtin.copy:
    content: |
      127.0.0.1        localhost
      ::1              localhost
      127.0.1.1        {{ hostname | default('debian') }} {{ hostname | default('debian') }}.{{ domain | default('at.home') }}
    dest: "{{ bootstrap_dir }}/etc/hostname"
    mode: 0644
    owner: root
    group: root

- name: Set root password
  ansible.builtin.shell:
    cmd: |
      echo "root:password" | arch-chroot {{ bootstrap_dir }} chpasswd

- name: Configure sudoers
  ansible.builtin.copy:
    content: |
      %sudo ALL=(ALL) NOPASSWD: ALL
    dest: "{{ bootstrap_dir }}/etc/sudoers.d/99-wheel_no_passwd"
    mode: 0644
    owner: root
    group: root

- name: Install GRUB
  ansible.builtin.shell:
    cmd: |
      arch-chroot {{ bootstrap_dir }} grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB

- name: Create GRUB config
  ansible.builtin.shell:
    cmd: |
      arch-chroot {{ bootstrap_dir }} update-grub2

- name: Generate /etc/fstab
  ansible.builtin.copy:
    content: |
      # {{ partition_info.root }}
      UUID={{ (device_info | selectattr('fstype','equalto','ext4') | first).uuid }}	/         	ext4      	rw,relatime	0 1

      # {{ partition_info.efi }}
      UUID={{ (device_info | selectattr('fstype','equalto','vfat') | first).uuid }}                            	/boot     	vfat      	rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=ascii,shortname=mixed,utf8,errors=remount-ro	0 2

      # {{ partition_info.swap }}
      UUID={{ (device_info | selectattr('fstype','equalto','swap') | first).uuid }}	none      	swap      	defaults  	0 0

    dest: "{{ bootstrap_dir }}/etc/fstab"
    mode: 0644
    owner: root
    group: root
