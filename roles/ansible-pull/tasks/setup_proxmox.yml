---
- name: Create bind mount location for /boot/pve
  ansible.builtin.shell:
    cmd: |
      rm -rfv {{ bootstrap_dir }}/boot/pve && \
        mkdir -pv {{ bootstrap_dir }}/boot/pve && \
        mkdir -pv {{ bootstrap_dir }}/mnt/pve && \
        mount --bind {{ bootstrap_dir }}/mnt/pve {{ bootstrap_dir }}/boot/pve
  changed_when: false

- name: Generate /etc/fstab
  ansible.builtin.copy:
    content: |
      # {{ partition_info.root }}
      UUID={{ (device_info | selectattr('fstype','equalto','ext4') | first).uuid }}	/         	ext4      	rw,relatime	0 1

      # {{ partition_info.efi }}
      UUID={{ (device_info | selectattr('fstype','equalto','vfat') | first).uuid }}                            	/boot     	vfat      	rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=ascii,shortname=mixed,utf8,errors=remount-ro	0 2

      # {{ partition_info.swap }}
      UUID={{ (device_info | selectattr('fstype','equalto','swap') | first).uuid }}	none      	swap      	defaults  	0 0

      # /mnt/pve
      /mnt/pve    /boot/pve   none    defaults,bind   0,0

    dest: "{{ bootstrap_dir }}/etc/fstab"
    mode: 0644
    owner: root
    group: root

- name: Set hostname
  ansible.builtin.copy:
    content: |
      {{ hostname | default('vmhost002') }}
    dest: "{{ bootstrap_dir }}/etc/hostname"
    mode: 0644
    owner: root
    group: root

- name: Set hosts
  ansible.builtin.copy:
    content: |
      127.0.0.1        localhost
      ::1              localhost
      {{ network_ip_address.address }}        {{ hostname | default('vmhost002') }} {{ hostname | default('vmhost002') }}.{{ domain | default('at.home') }}
    dest: "{{ bootstrap_dir }}/etc/hosts"
    mode: 0644
    owner: root
    group: root

- name: Configure network interfaces
  ansible.builtin.copy:
    content: |
      auto lo
      iface lo inet loopback

      iface {{ main_if }} inet manual
          post-up ethtool -K {{ main_if }} gso off gro off tso off

      auto vmbr0
      iface vmbr0 inet {{ network_ip_address.type }}
          address {{ network_ip_address.address }}/{{ network_ip_address.mask_length }}
          gateway {{ network_ip_address.gateway }}
          broadcast {{ network_ip_address.broadcast }}
          bridge-ports {{ main_if }}
          bridge-stp off
          bridge-fd 0
          post-up ethtool -K {{ main_if }} gso off gro off tso off

    dest: "{{ bootstrap_dir }}/etc/network/interfaces"
    mode: 0644
    owner: root
    group: root

- name: Configure resolv.conf
  ansible.builtin.copy:
    content: |
      nameserver 192.168.122.1

    dest: "{{ bootstrap_dir }}/etc/resolv.conf"
    mode: 0644
    owner: root
    group: root

- name: Add proxmox source
  ansible.builtin.copy:
    content: |
      deb [arch=amd64] http://download.proxmox.com/debian/pve bookworm pve-no-subscription

    dest: "{{ bootstrap_dir }}/etc/apt/sources.list.d/pve-install-repo.list"
    mode: 0644
    owner: root
    group: root

- name: Remove proxmox enterprise source
  ansible.builtin.file:
    path: "{{ bootstrap_dir }}/etc/apt/sources.list.d/pve-enterprise.list"
    state: absent

- name: Add proxmox GPG key
  ansible.builtin.get_url:
    url: https://enterprise.proxmox.com/debian/proxmox-release-bookworm.gpg
    dest: "{{ bootstrap_dir }}/etc/apt/trusted.gpg.d/proxmox-release-bookworm.gpg"
    checksum: sha512:7da6fe34168adc6e479327ba517796d4702fa2f8b4f0a9833f5ea6e6b48f6507a6da403a274fe201595edc86a84463d50383d07f64bdde2e3658108db7d6dc87

- name: Update repositories
  ansible.builtin.shell:
    cmd: |
      arch-chroot {{ bootstrap_dir }} apt -y {{ command }}
  loop:
    - update
    - full-upgrade
  loop_control:
    loop_var: command
  ignore_errors: true

- name: Install proxmox-ve
  ansible.builtin.shell:
    cmd: |
      arch-chroot {{ bootstrap_dir }} apt -y install {{ proxmox_packages | join(' ') }}
  vars:
    proxmox_packages:
      - proxmox-default-kernel
      - proxmox-ve
      - postfix
      - open-iscsi
      - chrony

- name: Remove proxmox enterprise source
  ansible.builtin.file:
    path: "{{ bootstrap_dir }}/etc/apt/sources.list.d/pve-enterprise.list"
    state: absent

- name: Create directory for nag screen remover
  ansible.builtin.file:
    path: "{{ bootstrap_dir }}/opt/pve-nag-buster/install.sh"
    state: directory
    mode: 0755
    owner: root
    group: root

- name: Get nag screen remover
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/foundObjects/pve-nag-buster/master/install.sh
    dest: "{{ bootstrap_dir }}/opt/pve-nag-buster/install.sh"
    checksum: sha512:7da6fe34168adc6e479327ba517796d4702fa2f8b4f0a9833f5ea6e6b48f6507a6da403a274fe201595edc86a84463d50383d07f64bdde2e3658108db7d6dc87
    mode: 0755
    owner: root
    group: root

- name: Install nag screen remover
  ansible.builtin.shell:
    cmd: |
      arch-chroot {{ bootstrap_dir }} /opt/pve-nag-buster/install.sh --offline

- name: Remove default kernel
  ansible.builtin.shell:
    cmd: |
      arch-chroot {{ bootstrap_dir }} apt -y remove linux-image-amd64 'linux-image-6.1*' os-prober

- name: Update GRUB
  ansible.builtin.shell:
    cmd: |
      arch-chroot {{ bootstrap_dir }} update-grub2
